{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../poll.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction PollsManagementComponent_tr_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const user_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.poll_id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.description);\n  }\n}\nfunction PollsManagementComponent_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 6)(2, \"form\")(3, \"div\", 7)(4, \"label\");\n    i0.ɵɵtext(5, \"Enter the Poll Number:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"br\")(7, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 7)(9, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function PollsManagementComponent_ng_container_12_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.makeLive());\n    });\n    i0.ɵɵtext(10, \"Submit\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nexport class PollsManagementComponent {\n  constructor(pollService, router) {\n    this.pollService = pollService;\n    this.router = router;\n    this.openform = false;\n    this.submitted = false;\n  }\n  getData() {\n    return this.pollService.PollsManagemet(this.allPolls).subscribe(response => {\n      this.response = response;\n      this.userData = this.response.rows;\n    });\n  }\n  openForm() {\n    this.openform = !this.openform;\n  }\n  makeLive() {\n    this.submitted = true;\n    // this.pollService.update(this.)\n    // return this.pollService.update(this.pollStatus).subscribe((response) => {\n    //   this.response = response;\n    //   console.log(this.response)\n    // })\n  }\n\n  ngOnInit() {\n    this.getData();\n  }\n}\nPollsManagementComponent.ɵfac = function PollsManagementComponent_Factory(t) {\n  return new (t || PollsManagementComponent)(i0.ɵɵdirectiveInject(i1.PollService), i0.ɵɵdirectiveInject(i2.Router));\n};\nPollsManagementComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PollsManagementComponent,\n  selectors: [[\"app-polls-management\"]],\n  decls: 13,\n  vars: 2,\n  consts: [[1, \"col-md-7\", \"m-5\"], [1, \"table\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", \"bg-success\", 3, \"click\"], [4, \"ngIf\"], [1, \"bg-white\", \"shadow-sm\", \"p-3\"], [1, \"form-group\"], [\"type\", \"text\", \"placeholder\", \"Enter poll Id\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function PollsManagementComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1)(2, \"thead\")(3, \"tr\")(4, \"th\", 2);\n      i0.ɵɵtext(5, \"Poll Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"th\", 2);\n      i0.ɵɵtext(7, \"Description\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(8, \"tbody\");\n      i0.ɵɵtemplate(9, PollsManagementComponent_tr_9_Template, 5, 2, \"tr\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function PollsManagementComponent_Template_button_click_10_listener() {\n        return ctx.openForm();\n      });\n      i0.ɵɵtext(11, \" Make a Poll Live \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(12, PollsManagementComponent_ng_container_12_Template, 11, 0, \"ng-container\", 5);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.userData);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.openform);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IASMA,0BAAkC;IAC5BA,YAAkB;IAAAA,iBAAK;IAC3BA,0BAAI;IAAAA,YAAsB;IAAAA,iBAAK;;;;IAD3BA,eAAkB;IAAlBA,qCAAkB;IAClBA,eAAsB;IAAtBA,yCAAsB;;;;;;IASlCA,6BAA+B;IAC7BA,8BAAoC;IAGvBA,sCAAsB;IAAAA,iBAAQ;IAAAA,qBAAM;IAE7CA,iBAAM;IAENA,8BAAwB;IACwBA;MAAAA;MAAA;MAAA,OAASA,gCAAU;IAAA,EAAC;IAACA,uBAAM;IAAAA,iBAAS;IAI1FA,0BAAe;;;ACxBf,OAAM,MAAOC,wBAAwB;EAQnCC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;IAH5D,aAAQ,GAAS,KAAK;IACtB,cAAS,GAAS,KAAK;EAE+C;EAEtEC,OAAO;IACL,OAAO,IAAI,CAACF,WAAW,CAACG,cAAc,CAAC,IAAI,CAACC,QAAQ,CAAC,CAACC,SAAS,CAAEC,QAAa,IAAI;MAChF,IAAI,CAACA,QAAQ,GAAGA,QAAQ;MACxB,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACD,QAAQ,CAACE,IAAI;IACpC,CAAC,CAAC;EACJ;EAEAC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAE,CAAC,IAAI,CAACA,QAAQ;EAC/B;EAEFC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI;IAErB;IACA;IACA;IACA;IACA;EACF;;EACEC,QAAQ;IACN,IAAI,CAACX,OAAO,EAAE;EACf;;AAhCUJ,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTrCrB,8BAA0B;MAIFA,uBAAO;MAAAA,iBAAK;MAC5BA,6BAAgB;MAAAA,2BAAW;MAAAA,iBAAK;MAGpCA,6BAAO;MACLA,uEAGK;MACPA,iBAAQ;MAEVA,kCAAgE;MAArBA;QAAA,OAASsB,cAAU;MAAA,EAAC;MAC7DtB,mCACF;MAAAA,iBAAS;MAGXA,8FAae;;;MAxBYA,eAAW;MAAXA,sCAAW;MAWvBA,eAAc;MAAdA,mCAAc","names":["i0","PollsManagementComponent","constructor","pollService","router","getData","PollsManagemet","allPolls","subscribe","response","userData","rows","openForm","openform","makeLive","submitted","ngOnInit","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/prabhat.kumar/Documents/doc_train/day_11/bakend/polls-nestjs/frontend-angular/src/app/admin/polls-management/polls-management.component.html","/home/prabhat.kumar/Documents/doc_train/day_11/bakend/polls-nestjs/frontend-angular/src/app/admin/polls-management/polls-management.component.ts"],"sourcesContent":["<div class=\"col-md-7 m-5\">\n  <table class=\"table\">\n    <thead>\n      <tr>\n        <th scope=\"col\">Poll Id</th>\n        <th scope=\"col\">Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let user of userData\">\n        <td>{{ user.poll_id }}</td>\n        <td>{{ user.description }}</td>\n      </tr>\n    </tbody>\n  </table>\n  <button class=\"btn btn-primary bg-success\" (click)=\"openForm()\">\n    Make a Poll Live\n  </button>\n</div>\n\n<ng-container *ngIf=\"openform\">\n  <div class=\"bg-white shadow-sm p-3\">\n    <form>\n      <div class=\"form-group\">\n        <label>Enter the Poll Number:</label><br />\n        <input type=\"text\" placeholder=\"Enter poll Id\" />\n      </div>\n\n      <div class=\"form-group\">\n        <button class=\"btn btn-primary\" type=\"submit\" (click)=\"makeLive()\">Submit</button>\n      </div>\n    </form>\n  </div>\n</ng-container>\n","import { Component } from '@angular/core';\nimport { PollService } from '../poll.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-polls-management',\n  templateUrl: './polls-management.component.html',\n  styleUrls: ['./polls-management.component.css']\n})\nexport class PollsManagementComponent {\n  response: any;\n  allPolls: any;\n  userData: any;\n  pollStatus:any;\n  openform:boolean=false;\n  submitted:boolean=false;\n\n  constructor(private pollService: PollService, private router: Router){}\n  \n  getData(){\n    return this.pollService.PollsManagemet(this.allPolls).subscribe((response: any) =>{\n      this.response = response;\n      this.userData = this.response.rows;\n    })\n  }\n\n  openForm(){\n    this.openform= !this.openform;\n  }\n\nmakeLive(){\n  this.submitted = true;\n  \n  // this.pollService.update(this.)\n  // return this.pollService.update(this.pollStatus).subscribe((response) => {\n  //   this.response = response;\n  //   console.log(this.response)\n  // })\n}\n  ngOnInit(){\n    this.getData();\n   }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}